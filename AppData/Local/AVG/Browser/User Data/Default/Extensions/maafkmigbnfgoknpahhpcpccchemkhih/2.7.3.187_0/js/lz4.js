"use strict";{let e,n,t,o,i,r=0,c=6e4;const d=function(){if(c=1e3*µBlock.hiddenSettings.autoUpdateAssetFetchPeriod+15e3,null===e)return Promise.resolve(null);if(void 0!==e)return Promise.resolve(e);if(void 0===n){let t;!0===µBlock.hiddenSettings.disableWebAssembly&&(t="js"),n=lz4BlockCodec.createInstance(t).then((t=>{e=t,n=void 0}))}return n},u=function(){e=void 0,t=o=void 0,r=0,i=void 0},s=function(n){void 0!==i&&(clearTimeout(i),i=void 0),r+=n,r>0||null!==e&&(i=vAPI.setTimeout(u,c))},a=function(n){if(!e)return;void 0===t&&(t=new TextEncoder);const o=t.encode(n),i=o.byteLength,r=e.encodeBlock(o,8);return r instanceof Uint8Array!=0?(r[0]=24,r[1]=77,r[2]=34,r[3]=4,r[4]=i>>>0&255,r[5]=i>>>8&255,r[6]=i>>>16&255,r[7]=i>>>24&255,r):void 0},l=function(n){if(!e)return;if(24!==n[0]||77!==n[1]||34!==n[2]||4!==n[3])return void console.error("decodeValue: invalid input array");const t=n[4]<<0|n[5]<<8|n[6]<<16|n[7]<<24,i=e.decodeBlock(n,8,t);return i instanceof Uint8Array!=0?(void 0===o&&(o=new TextDecoder),o.decode(i)):void 0};µBlock.lz4Codec={encode:async function(e,n){if("string"!=typeof e||e.length<4096)return e;s(1),await d();let t=a(e);return s(-1),n instanceof Function&&(t=await n(t)),t||e},decode:async function(e,n){if(n instanceof Function&&(e=await n(e)),e instanceof Uint8Array==0)return e;s(1),await d();const t=l(e);return s(-1),t||e},relinquish:function(){c=1,s(0)}}}