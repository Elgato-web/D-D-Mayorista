"use strict";!function(e){const n=function(){let e=document.currentScript.src,n=/[^\/]+$/.exec(e);return null!==n?e.slice(0,n.index):""}(),t=function(e,n){let t=e.exports,s=t.getLinearMemoryOffset()+n,r=t.memory.buffer.byteLength>>>16,i=s+65535>>>16;return i>r&&t.memory.grow(i-r),t.memory.buffer};e.LZ4BlockWASM=function(){this.lz4wasmInstance=void 0},e.LZ4BlockWASM.prototype={flavor:"wasm",init:function(){return"object"==typeof WebAssembly&&"function"==typeof WebAssembly.instantiateStreaming||(this.lz4wasmInstance=null),null===this.lz4wasmInstance?Promise.resolve(!1):this.lz4wasmInstance instanceof WebAssembly.Instance?Promise.resolve(!0):(void 0===this.lz4wasmInstance&&(this.lz4wasmInstance=fetch(n+"lz4-block-codec.wasm",{mode:"same-origin"}).then(WebAssembly.instantiateStreaming).then((e=>{this.lz4wasmInstance=e&&e.instance||null})).catch((e=>{this.lz4wasmInstance=null,console.info(e)})).then((()=>null!==this.lz4wasmInstance))),this.lz4wasmInstance)},reset:function(){this.lz4wasmInstance=void 0},bytesInUse:function(){return this.lz4wasmInstance instanceof WebAssembly.Instance?this.lz4wasmInstance.exports.memory.buffer.byteLength:0},encodeBlock:function(e,n){if(this.lz4wasmInstance instanceof WebAssembly.Instance==0)throw new Error("LZ4BlockWASM: not initialized");if(e instanceof ArrayBuffer)e=new Uint8Array(e);else if(e instanceof Uint8Array==0)throw new TypeError;return function(e,n,s){let r=e.exports,i=r.getLinearMemoryOffset(),o=262144,a=n.byteLength;if(a>=2113929216)throw new RangeError;let c=o+a+s+r.lz4BlockEncodeBound(a),l=t(e,c);new Int32Array(l,i,65536).fill(-65536,0,65536),new Uint8Array(l,i+o,a).set(n);let f=r.lz4BlockEncode(i+o,a,i+o+a+s);if(0!==f)return new Uint8Array(l,i+o+a,s+f)}(this.lz4wasmInstance,e,n)},decodeBlock:function(e,n,s){if(this.lz4wasmInstance instanceof WebAssembly.Instance==0)throw new Error("LZ4BlockWASM: not initialized");if(e instanceof ArrayBuffer)e=new Uint8Array(e);else if(e instanceof Uint8Array==0)throw new TypeError;return function(e,n,s,r){let i=n.byteLength,o=e.exports,a=o.getLinearMemoryOffset(),c=t(e,i+r);if(new Uint8Array(c,a,i).set(n),0!==(r=o.lz4BlockDecode(a+s,i-s,a+i)))return new Uint8Array(c,a+i,r)}(this.lz4wasmInstance,e,n,s)}}}(this||self);